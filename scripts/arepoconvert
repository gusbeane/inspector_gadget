#!python
import sys
import arepo

def usage():
    print("Usage: arepoconvert [OPTIONS] <input filename> <outout filename>")
    print("")
    print("[OPTIONS] are:")
    print("  -fin  --informat       specify the input file format if not auto detected")
    print("  -fout --outformat      specify the output file format (default is format 3/hdf5)")
    print("  -bs   --blocksequence  list of blocks in format 1 files, seperated by ',' without spaces. This option is only allowed for format 1 files")
    print("  -d    --todouble       convert floating point values to double")
    print("  -s    --subfind        treat file as subfind output if not auto detected")
    exit()

if __name__ == "__main__":
    fin = ''
    fout = ''
    formatin = None
    formatout = 3
    subfind = False
    bs = None
    toDouble = False
        
    if len(sys.argv) < 3:
        usage()
    
    it = iter(sys.argv[1:])
    for opt in it:           
        if opt == "--informat" or opt == "-fin":
            formatin = int(it.next())
            
        elif opt == "--outformat" or opt == "-fout":
            formatout = int(it.next())
        
        elif opt == "--blocksequence" or opt == "-bs":
            bs = int(it.next()).split(",")
        
        elif opt == "--subfind" or opt == "-s":
            subfind = True
            
        elif opt == "--todouble" or opt == "-d":
            toDouble = True
            
        elif opt == "--help" or opt == "-h":
            usage()
            
        elif not opt.startswith("-"):
            if fin == "":
                fin = opt
            elif fout == "":
                fout = opt
            else:
                usage()
                
        else:
            usage()
    
    if fin.find("fof_subhalo_tab") == -1 and subfind == False:
        if bs is not None:
            sn = arepo.Snapshot(fin, format=formatin, combineFiles=False, block_sequence=bs, toDouble=toDouble)
        else:
            sn = arepo.Snapshot(fin, format=formatin, combineFiles=False, toDouble=toDouble)
    else:
        sn = arepo.Subfind(fin, format=formatin, combineFiles=False, toDouble=toDouble)
    

    if (sn._format == 1 or sn._format == 2) and formatout==3:
        end = False
        for k in sn.data.keys():
            if k not in rev_hdf5toformat2:
                print("Can not translate key %s to hdf5 dataset name. Please add it to inspector gadget first."%k)
                end=True
        if end:
            print("Stopping")
            exit()
            
    sn.write(fout, format=formatout)
    
    